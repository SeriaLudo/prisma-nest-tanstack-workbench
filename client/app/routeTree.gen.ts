/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TanstackImport } from './routes/tanstack'
import { Route as LoginImport } from './routes/login'
import { Route as AgGridImport } from './routes/ag-grid'
import { Route as AdminImport } from './routes/admin'
import { Route as AddressAriaImport } from './routes/address-aria'
import { Route as AddressImport } from './routes/address'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TanstackRoute = TanstackImport.update({
  id: '/tanstack',
  path: '/tanstack',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AgGridRoute = AgGridImport.update({
  id: '/ag-grid',
  path: '/ag-grid',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AddressAriaRoute = AddressAriaImport.update({
  id: '/address-aria',
  path: '/address-aria',
  getParentRoute: () => rootRoute,
} as any)

const AddressRoute = AddressImport.update({
  id: '/address',
  path: '/address',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/address': {
      id: '/address'
      path: '/address'
      fullPath: '/address'
      preLoaderRoute: typeof AddressImport
      parentRoute: typeof rootRoute
    }
    '/address-aria': {
      id: '/address-aria'
      path: '/address-aria'
      fullPath: '/address-aria'
      preLoaderRoute: typeof AddressAriaImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/ag-grid': {
      id: '/ag-grid'
      path: '/ag-grid'
      fullPath: '/ag-grid'
      preLoaderRoute: typeof AgGridImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/tanstack': {
      id: '/tanstack'
      path: '/tanstack'
      fullPath: '/tanstack'
      preLoaderRoute: typeof TanstackImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/address': typeof AddressRoute
  '/address-aria': typeof AddressAriaRoute
  '/admin': typeof AdminRoute
  '/ag-grid': typeof AgGridRoute
  '/login': typeof LoginRoute
  '/tanstack': typeof TanstackRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/address': typeof AddressRoute
  '/address-aria': typeof AddressAriaRoute
  '/admin': typeof AdminRoute
  '/ag-grid': typeof AgGridRoute
  '/login': typeof LoginRoute
  '/tanstack': typeof TanstackRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/address': typeof AddressRoute
  '/address-aria': typeof AddressAriaRoute
  '/admin': typeof AdminRoute
  '/ag-grid': typeof AgGridRoute
  '/login': typeof LoginRoute
  '/tanstack': typeof TanstackRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/address'
    | '/address-aria'
    | '/admin'
    | '/ag-grid'
    | '/login'
    | '/tanstack'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/address'
    | '/address-aria'
    | '/admin'
    | '/ag-grid'
    | '/login'
    | '/tanstack'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/address'
    | '/address-aria'
    | '/admin'
    | '/ag-grid'
    | '/login'
    | '/tanstack'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AddressRoute: typeof AddressRoute
  AddressAriaRoute: typeof AddressAriaRoute
  AdminRoute: typeof AdminRoute
  AgGridRoute: typeof AgGridRoute
  LoginRoute: typeof LoginRoute
  TanstackRoute: typeof TanstackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AddressRoute: AddressRoute,
  AddressAriaRoute: AddressAriaRoute,
  AdminRoute: AdminRoute,
  AgGridRoute: AgGridRoute,
  LoginRoute: LoginRoute,
  TanstackRoute: TanstackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/address",
        "/address-aria",
        "/admin",
        "/ag-grid",
        "/login",
        "/tanstack"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/address": {
      "filePath": "address.tsx"
    },
    "/address-aria": {
      "filePath": "address-aria.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/ag-grid": {
      "filePath": "ag-grid.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/tanstack": {
      "filePath": "tanstack.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
